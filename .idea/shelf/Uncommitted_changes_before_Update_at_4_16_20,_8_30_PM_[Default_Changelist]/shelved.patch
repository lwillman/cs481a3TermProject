Index: FirstStrykedapp/src/components/addUser.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- FirstStrykedapp/src/components/addUser.js	(date 1587074540341)
+++ FirstStrykedapp/src/components/addUser.js	(date 1587074540341)
@@ -0,0 +1,99 @@
+import React, { Component } from "react";
+import { connect } from "react-redux";
+import { Button, Header, Icon, Modal, Form, Message } from "semantic-ui-react";
+
+function mapStateToProps(state) {
+    return {
+        CZ: state.CZ,
+        userAddress: state.userAddress,
+    };
+}
+
+// Create a new Zombie
+
+class AddUser extends Component {
+    state = {
+        modalOpen: false,
+        value: "",
+        message: "",
+        errorMessage: "",
+        loading: false
+    };
+    handleOpen = () => this.setState({ modalOpen: true });
+
+    handleClose = () => this.setState({ modalOpen: false });
+
+    onSubmit = async event => {
+        event.preventDefault();
+        this.setState({
+            loading: true,
+            errorMessage: "",
+            message: "waiting for blockchain transaction to complete..."
+        });
+        try {
+            await this.props.CZ.methods
+                .addUser()
+                .send({
+                    from: this.props.userAddress
+                });
+            this.setState({
+                loading: false,
+                message: "You have been authorized to contribute data."
+            });
+            //getZombieCount(this.props.CZ, this.props.userAddress);
+        } catch (err) {
+            this.setState({
+                loading: false,
+                errorMessage: err.message,
+                message: "User rejected transaction or else this account is already in use."
+            });
+        }
+    }
+
+    render() {
+        //let createDisabled = (this.props !== 0);
+        return (
+            <Modal
+        trigger={
+            <Button onClick={this.handleOpen}>
+            Add User
+        </Button>
+    }
+        open={this.state.modalOpen}
+        onClose={this.handleClose}
+            >
+            <Header icon="browser" content="Add a User" />
+            <Modal.Content>
+        <br /> <br />
+        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>
+    <Form.Field>
+//        <label>Zombie Name</label>
+ //       <input
+ //       placeholder="Name"
+        onChange={event =>
+        this.setState({
+ //           value: event.target.value
+        })
+    }
+        />
+        </Form.Field>
+        <Message error header="Oops!" content={this.state.errorMessage} />
+        <Button primary type="submit" loading={this.state.loading}>
+            <Icon name="check" />
+            Create Zombie
+        </Button>
+        <hr />
+        <h2>{this.state.message}</h2>
+        </Form>
+        </Modal.Content>
+        <Modal.Actions>
+        <Button color="red" onClick={this.handleClose} inverted>
+        <Icon name="cancel" /> Close
+            </Button>
+            </Modal.Actions>
+            </Modal>
+    );
+    }
+}
+
+export default connect(mapStateToProps)(AddUser);
diff --git FirstStrykedapp/src/components/enterPatient.js FirstStrykedapp/src/components/enterPatient.js
new file mode 100644
