{"ast":null,"code":"import FirstStrike from \"../contract_ABI/Patient.json\";\nimport store from \"../redux/store\"; //Code pulled from CryptoZombies and modified\n//import blockchainInitialized from \"../redux/modules/czAppDuck\";  // for some unknown reason, the duck doesn't work!\n// so use this action type and creator instead\n\nexport const BLOCKCHAIN_INITIALIZED = \"BLOCKCHAIN_INITIALIZED\"; // action type\n// action creator (dispatch sends this to redux reducer)\n\nfunction blockchainInitialized(data) {\n  return {\n    type: BLOCKCHAIN_INITIALIZED,\n    payload: data\n  };\n} //\n//  set up the blockchain shadow contract, user address, and user zombie count.  Put into redux store.\n//\n\n\nasync function initBlockchain(web3) {\n  // Use web3 to get the user's accounts.\n  //const accounts = await web3.eth.getAccounts();\n  //const userAddress = accounts[0];\n  // Get contract instance\n  const networkId = await web3.eth.net.getId();\n  const deployedNetwork = FirstStrike.networks[networkId];\n  const instance = new web3.eth.Contract(FirstStrike.abi, deployedNetwork && deployedNetwork.address); // put state data into the REDUX store for easy access from other pages and components\n\n  let data = {\n    CZ: instance //userAddress,    // shorthand\n\n  };\n  store.dispatch(blockchainInitialized(data));\n  return data;\n}\n\nexport default initBlockchain;","map":{"version":3,"sources":["C:/Users/sajaa/github/cs481a3TermProject/FirstStrykedapp/src/utils/initBlockchain.js"],"names":["FirstStrike","store","BLOCKCHAIN_INITIALIZED","blockchainInitialized","data","type","payload","initBlockchain","web3","networkId","eth","net","getId","deployedNetwork","networks","instance","Contract","abi","address","CZ","dispatch"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAMC,sBAAsB,GAAG,wBAA/B,C,CAAyD;AAEhE;;AACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEH,sBADH;AAEHI,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,C,CAED;AACA;AACA;;;AAEA,eAAeG,cAAf,CAA8BC,IAA9B,EAAoC;AAChC;AACA;AACA;AAEA;AACA,QAAMC,SAAS,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;AACA,QAAMC,eAAe,GAAGb,WAAW,CAACc,QAAZ,CAAqBL,SAArB,CAAxB;AACA,QAAMM,QAAQ,GAAG,IAAIP,IAAI,CAACE,GAAL,CAASM,QAAb,CACbhB,WAAW,CAACiB,GADC,EAEbJ,eAAe,IAAIA,eAAe,CAACK,OAFtB,CAAjB,CARgC,CAahC;;AAEA,MAAId,IAAI,GAAG;AACPe,IAAAA,EAAE,EAAEJ,QADG,CAEP;;AAFO,GAAX;AAKAd,EAAAA,KAAK,CAACmB,QAAN,CAAejB,qBAAqB,CAACC,IAAD,CAApC;AAEA,SAAOA,IAAP;AACH;;AAED,eAAeG,cAAf","sourcesContent":["import FirstStrike from \"../contract_ABI/Patient.json\";\r\nimport store from \"../redux/store\";\r\n\r\n//Code pulled from CryptoZombies and modified\r\n//import blockchainInitialized from \"../redux/modules/czAppDuck\";  // for some unknown reason, the duck doesn't work!\r\n// so use this action type and creator instead\r\n\r\nexport const BLOCKCHAIN_INITIALIZED = \"BLOCKCHAIN_INITIALIZED\"; // action type\r\n\r\n// action creator (dispatch sends this to redux reducer)\r\nfunction blockchainInitialized(data) {\r\n    return {\r\n        type: BLOCKCHAIN_INITIALIZED,\r\n        payload: data\r\n    };\r\n}\r\n\r\n//\r\n//  set up the blockchain shadow contract, user address, and user zombie count.  Put into redux store.\r\n//\r\n\r\nasync function initBlockchain(web3) {\r\n    // Use web3 to get the user's accounts.\r\n    //const accounts = await web3.eth.getAccounts();\r\n    //const userAddress = accounts[0];\r\n\r\n    // Get contract instance\r\n    const networkId = await web3.eth.net.getId();\r\n    const deployedNetwork = FirstStrike.networks[networkId];\r\n    const instance = new web3.eth.Contract(\r\n        FirstStrike.abi,\r\n        deployedNetwork && deployedNetwork.address\r\n    );\r\n\r\n    // put state data into the REDUX store for easy access from other pages and components\r\n\r\n    let data = {\r\n        CZ: instance,\r\n        //userAddress,    // shorthand\r\n    };\r\n\r\n    store.dispatch(blockchainInitialized(data));\r\n\r\n    return data;\r\n}\r\n\r\nexport default initBlockchain;\r\n"]},"metadata":{},"sourceType":"module"}